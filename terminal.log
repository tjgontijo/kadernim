thiago@MacBook-Pro-de-Thiago kadernim % npm run dev

> kadernim@0.1.0 dev
> next dev

   ▲ Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.15.3:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 1548ms
 ✓ Compiled /middleware in 300ms (114 modules)
 ○ Compiling /login ...
 ✓ Compiled /login in 791ms (1023 modules)
 GET /login 200 in 1120ms
 ✓ Compiled in 98ms (380 modules)
 ✓ Compiled /favicon.ico in 123ms (659 modules)
 GET /favicon.ico 200 in 227ms
 ○ Compiling /api/v1/auth/[...all] ...
 ✓ Compiled /api/v1/auth/[...all] in 786ms (1543 modules)
Configurando rotas de API para Better Auth
Handlers de API configurados: [ 'GET', 'POST' ]
Configurando rotas de API para Better Auth
Handlers de API configurados: [ 'GET', 'POST' ]
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."user"."id", "public"."user"."name", "public"."user"."email", "public"."user"."emailVerified", "public"."user"."image", "public"."user"."createdAt", "public"."user"."updatedAt", "public"."user"."role", "public"."user"."banned", "public"."user"."banReason", "public"."user"."banExpires", "public"."user"."subscriptionTier", "public"."user"."whatsapp", "public"."user"."temporaryPassword", "public"."user"."cpf" FROM "public"."user" WHERE "public"."user"."email" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."account"."id", "public"."account"."accountId", "public"."account"."providerId", "public"."account"."userId", "public"."account"."accessToken", "public"."account"."refreshToken", "public"."account"."idToken", "public"."account"."accessTokenExpiresAt", "public"."account"."refreshTokenExpiresAt", "public"."account"."scope", "public"."account"."password", "public"."account"."createdAt", "public"."account"."updatedAt" FROM "public"."account" WHERE "public"."account"."userId" = $1 ORDER BY "public"."account"."id" ASC LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."user"."id", "public"."user"."name", "public"."user"."email", "public"."user"."emailVerified", "public"."user"."image", "public"."user"."createdAt", "public"."user"."updatedAt", "public"."user"."role", "public"."user"."banned", "public"."user"."banReason", "public"."user"."banExpires", "public"."user"."subscriptionTier", "public"."user"."whatsapp", "public"."user"."temporaryPassword", "public"."user"."cpf" FROM "public"."user" WHERE "public"."user"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query INSERT INTO "public"."session" ("id","expiresAt","token","createdAt","updatedAt","ipAddress","userAgent","userId") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."session"."id", "public"."session"."expiresAt", "public"."session"."token", "public"."session"."createdAt", "public"."session"."updatedAt", "public"."session"."ipAddress", "public"."session"."userAgent", "public"."session"."userId", "public"."session"."impersonatedBy", "public"."session"."activeOrganizationId"
prisma:query COMMIT
 POST /api/v1/auth/sign-in/email 200 in 3085ms
 ○ Compiling /resources ...
 ✓ Compiled /resources in 705ms (1764 modules)
 GET /resources 200 in 1042ms
 GET /favicon.ico 200 in 388ms
 ○ Compiling /api/v1/resources ...
 ✓ Compiled /api/v1/resources in 1203ms (1777 modules)
Configurando rotas de API para Better Auth
Handlers de API configurados: [ 'GET', 'POST' ]
 GET /api/v1/auth/get-session 200 in 1496ms
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."resource"."id", "public"."resource"."title", "public"."resource"."description", "public"."resource"."imageUrl", "public"."resource"."isFree", "public"."resource"."subjectId", "public"."resource"."educationLevelId", COALESCE("aggr_selection_0_ResourceFile"."_aggr_count_files", 0) AS "_aggr_count_files" FROM "public"."resource" LEFT JOIN (SELECT "public"."resource_file"."resourceId", COUNT(*) AS "_aggr_count_files" FROM "public"."resource_file" WHERE 1=1 GROUP BY "public"."resource_file"."resourceId") AS "aggr_selection_0_ResourceFile" ON ("public"."resource"."id" = "aggr_selection_0_ResourceFile"."resourceId") WHERE 1=1 ORDER BY "public"."resource"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."subject"."id", "public"."subject"."name" FROM "public"."subject" WHERE "public"."subject"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."education_level"."id", "public"."education_level"."name" FROM "public"."education_level" WHERE "public"."education_level"."id" IN ($1) OFFSET $2
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."resource"."id" FROM "public"."resource" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."user_resource_access"."id", "public"."user_resource_access"."resourceId" FROM "public"."user_resource_access" WHERE ("public"."user_resource_access"."userId" = $1 AND "public"."user_resource_access"."resourceId" IN ($2,$3) AND "public"."user_resource_access"."isActive" = $4 AND ("public"."user_resource_access"."expiresAt" IS NULL OR "public"."user_resource_access"."expiresAt" >= $5)) OFFSET $6
prisma:query COMMIT
 GET /api/v1/resources?page=1&limit=12 200 in 2224ms
Configurando rotas de API para Better Auth
Handlers de API configurados: [ 'GET', 'POST' ]
 ✓ Compiled /resources/[id] in 426ms (1811 modules)
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."subscription"."id", "public"."subscription"."isActive", "public"."subscription"."expiresAt", "public"."subscription"."planId" FROM "public"."subscription" WHERE ("public"."subscription"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."resource"."id", "public"."resource"."title", "public"."resource"."slug", "public"."resource"."description", "public"."resource"."imageUrl", "public"."resource"."featured", "public"."resource"."isFree", "public"."resource"."createdAt", "public"."resource"."updatedAt", "public"."resource"."subjectId", "public"."resource"."educationLevelId" FROM "public"."resource" WHERE ("public"."resource"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."subject"."id", "public"."subject"."name", "public"."subject"."slug", "public"."subject"."createdAt", "public"."subject"."updatedAt" FROM "public"."subject" WHERE "public"."subject"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."education_level"."id", "public"."education_level"."name", "public"."education_level"."slug", "public"."education_level"."ageRange", "public"."education_level"."createdAt", "public"."education_level"."updatedAt" FROM "public"."education_level" WHERE "public"."education_level"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."resource_file"."id", "public"."resource_file"."fileName", "public"."resource_file"."fileType", "public"."resource_file"."storageType"::text, "public"."resource_file"."externalUrl", "public"."resource_file"."storageKey", "public"."resource_file"."metadata", "public"."resource_file"."createdAt", "public"."resource_file"."resourceId" FROM "public"."resource_file" WHERE "public"."resource_file"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."external_product_mapping"."id", "public"."external_product_mapping"."productId", "public"."external_product_mapping"."store", "public"."external_product_mapping"."resourceId", "public"."external_product_mapping"."createdAt", "public"."external_product_mapping"."updatedAt" FROM "public"."external_product_mapping" WHERE "public"."external_product_mapping"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."resource_bncc_code"."id", "public"."resource_bncc_code"."resourceId", "public"."resource_bncc_code"."bnccCodeId" FROM "public"."resource_bncc_code" WHERE "public"."resource_bncc_code"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_resource_access"."id", "public"."user_resource_access"."isActive", "public"."user_resource_access"."expiresAt", "public"."user_resource_access"."resourceId" FROM "public"."user_resource_access" WHERE ("public"."user_resource_access"."userId" = $1 AND "public"."user_resource_access"."resourceId" IN ($2)) OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
 GET /resources/cmgr037vr005typzgud2l3liv 200 in 2280ms
prisma:query SELECT "public"."resource"."id", "public"."resource"."title", "public"."resource"."slug", "public"."resource"."description", "public"."resource"."imageUrl", "public"."resource"."featured", "public"."resource"."isFree", "public"."resource"."createdAt", "public"."resource"."updatedAt", "public"."resource"."subjectId", "public"."resource"."educationLevelId" FROM "public"."resource" WHERE ("public"."resource"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."subject"."id", "public"."subject"."name", "public"."subject"."slug", "public"."subject"."createdAt", "public"."subject"."updatedAt" FROM "public"."subject" WHERE "public"."subject"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."education_level"."id", "public"."education_level"."name", "public"."education_level"."slug", "public"."education_level"."ageRange", "public"."education_level"."createdAt", "public"."education_level"."updatedAt" FROM "public"."education_level" WHERE "public"."education_level"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."resource_file"."id", "public"."resource_file"."fileName", "public"."resource_file"."fileType", "public"."resource_file"."storageType"::text, "public"."resource_file"."externalUrl", "public"."resource_file"."storageKey", "public"."resource_file"."metadata", "public"."resource_file"."createdAt", "public"."resource_file"."resourceId" FROM "public"."resource_file" WHERE "public"."resource_file"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."external_product_mapping"."id", "public"."external_product_mapping"."productId", "public"."external_product_mapping"."store", "public"."external_product_mapping"."resourceId", "public"."external_product_mapping"."createdAt", "public"."external_product_mapping"."updatedAt" FROM "public"."external_product_mapping" WHERE "public"."external_product_mapping"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."resource_bncc_code"."id", "public"."resource_bncc_code"."resourceId", "public"."resource_bncc_code"."bnccCodeId" FROM "public"."resource_bncc_code" WHERE "public"."resource_bncc_code"."resourceId" IN ($1) OFFSET $2
prisma:query SELECT "public"."user_resource_access"."id", "public"."user_resource_access"."isActive", "public"."user_resource_access"."expiresAt", "public"."user_resource_access"."resourceId" FROM "public"."user_resource_access" WHERE ("public"."user_resource_access"."userId" = $1 AND "public"."user_resource_access"."resourceId" IN ($2)) OFFSET $3
prisma:query COMMIT
prisma:query BEGIN
prisma:query DEALLOCATE ALL
prisma:query SELECT "public"."subscription"."id", "public"."subscription"."isActive", "public"."subscription"."expiresAt", "public"."subscription"."planId" FROM "public"."subscription" WHERE ("public"."subscription"."userId" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query COMMIT
 GET /resources/cmgr038ep005xypzgfx04yfsf 200 in 2905ms
